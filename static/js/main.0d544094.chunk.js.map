{"version":3,"sources":["coronaApi/CoronaState.js","coronaApi/Graph.js","layout/Home.js","App.js","reportWebVitals.js","index.js"],"names":["CoronaState","useState","setCountry","date","setDate","newConfirmed","setNewConfirmed","newDeaths","setNewDeaths","totalConfirmed","setTotalConfirmed","totalDeaths","setTotalDeaths","useEffect","axios","get","then","res","data","Countries","Global","catch","error","console","log","Date","split","NewConfirmed","NewDeaths","TotalConfirmed","TotalDeaths","className","Graph","confirmed","setConfirmed","quaranted","setQuaranted","lastData","setLastData","axiosData","a","krData","items","arr","reduce","acc","cur","currentDate","year","getFullYear","month","getMonth","getDate","active","Active","Confirmed","deaths","Deaths","recovered","Recovered","matchItem","find","i","push","labels","map","datasets","label","backgroundColor","fill","borderColor","last","length","options","legend","display","position","Home","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d544094.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './CoronaState.css';\r\n\r\n// async function GraphData() {\r\n//     const graph1data = await axios.get (\"https://api.covid19api.com/summary\")\r\n//     const CountriesData = graph1data.data.CountriesData\r\n\r\n//     return CountriesData;\r\n// }\r\n// GraphData()\r\n\r\nfunction CoronaState() {\r\n    //Country, NewConfirmed, TotalConfirmed, NewDeaths, TotalDeaths, Date\r\n    const [ country, setCountry ] = useState([]);\r\n    const [ date, setDate ] = useState(0);\r\n    const [ newConfirmed, setNewConfirmed ] = useState(0);\r\n    const [ newDeaths, setNewDeaths ] = useState(0);\r\n    const [ totalConfirmed, setTotalConfirmed ] = useState(0);\r\n    const [ totalDeaths, setTotalDeaths ] = useState(0);\r\n\r\n    \r\n    useEffect(()=> {\r\n        axios.get (\"https://api.covid19api.com/summary\")\r\n            .then(res => {\r\n                setCountry(res.data.Countries)\r\n                return res.data.Global\r\n            }).catch(error => console.log(error))\r\n            .then(res => {\r\n                setDate(res.Date.split('T')[0])\r\n                setNewConfirmed(res.NewConfirmed)\r\n                setNewDeaths(res.NewDeaths)\r\n                setTotalConfirmed(res.TotalConfirmed)\r\n                setTotalDeaths(res.TotalDeaths)\r\n            })\r\n    }, []);\r\n    \r\n    return (\r\n        <>\r\n            {/* <select>{country && country.map((v,i)=><option key={v+i}>{v.Country}</option>)}</select> */}\r\n            <div className=\"corona_state\">\r\n                <h2><span>Date:</span> {date}</h2>\r\n                <div className=\"co_state_desc\">\r\n                    <h2><span>NewConfirmed:</span> {newConfirmed}</h2>\r\n                    <h2><span>NewDeaths:</span> {newDeaths}</h2>\r\n                </div>\r\n                <div className=\"co_state_desc\">\r\n                    <h2><span>TotalConfirmed:</span> {totalConfirmed}</h2>\r\n                    <h2><span>TotalDeaths:</span> {totalDeaths}</h2>\r\n                </div>\r\n            </div>\r\n            {/* {country && country.map((v,i)=><h3 key={v+i}>{v.Country}</h3>)} */}\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CoronaState;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Bar, Line } from 'react-chartjs-2'; \r\nimport './Graph.css'\r\n\r\nconst Graph = () => {\r\n    const [ confirmed, setConfirmed ] = useState({});\r\n    const [ quaranted, setQuaranted ] = useState({});\r\n    const [ lastData, setLastData ] = useState([]);\r\n\r\n    useEffect(()=> {\r\n\r\n        const axiosData = async () => {\r\n            const res = await axios.get (\"https://api.covid19api.com/total/dayone/country/kr\")\r\n            krData(res.data)\r\n            // .then(res => {\r\n            //     setConfirmed(res.data.Confirmed)\r\n            //     console.log(res.data.Active)\r\n            //     setDeaths(res.data.Deaths)\r\n            // }).catch(error => console.log(error))\r\n        }\r\n        const krData = (items) => {\r\n            const arr = items.reduce((acc,cur)=> {\r\n                const currentDate = new Date(cur.Date);\r\n                const year = currentDate.getFullYear();\r\n                const month = currentDate.getMonth();\r\n                const date = currentDate.getDate();\r\n                const active = cur.Active;\r\n                const confirmed = cur.Confirmed;\r\n                const deaths = cur.Deaths;\r\n                const recovered = cur.Recovered;\r\n\r\n                const matchItem = acc.find(i => i.year === year && i.month === month)\r\n                if (!matchItem) {\r\n                    acc.push({year, month, date, active, confirmed, deaths})\r\n                }\r\n                if(matchItem && matchItem.date < date) {\r\n                    matchItem.year = year;\r\n                    matchItem.month = month;\r\n                    matchItem.date = date;\r\n                    matchItem.active = active;\r\n                    matchItem.confirmed = confirmed;\r\n                    matchItem.deaths = deaths;\r\n                    matchItem.recovered = recovered;\r\n                }\r\n\r\n                // console.log(cur, year,month,date);\r\n                // console.log(Active,Confirmed,Deaths);\r\n                return acc;\r\n            }, [])\r\n            const labels = arr.map(a => `${a.month+1}월`);\r\n            setConfirmed({\r\n                labels,\r\n                datasets: [{\r\n                    label: '국내 누적 확진자',\r\n                    backgroundColor: 'salmon',\r\n                    fill: true,\r\n                    data: arr.map(a => a.confirmed)\r\n                }]\r\n            });\r\n            setQuaranted({\r\n                labels,\r\n                datasets: [{\r\n                    label: '월별 격리자 현황',\r\n                    borderColor: '#75b67a',\r\n                    fill: false,\r\n                    data: arr.map(a => a.active)\r\n                }]\r\n            });\r\n            const last = arr[arr.length - 1]\r\n            console.log(last)\r\n            setLastData([last.confirmed, last.recovered, last.deaths])\r\n\r\n        }\r\n        axiosData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>국내 코로나 현황</h2>\r\n            <div className=\"graph_wrap\">\r\n                <div className=\"korea_corona\">\r\n                    <div className=\"korea_box\"><p>누적확진자</p>{lastData[0]}</div>\r\n                    <div className=\"korea_box\"><p>격리해제</p>{lastData[1]}</div>\r\n                    <div className=\"korea_box\"><p>사망자</p>{lastData[2]}</div>\r\n                </div>\r\n                <div className=\"graph_box\">\r\n                    <Bar data={confirmed} options={\r\n                        { title: { display: true, text: '누적 확진자 추이', fontSize: 25} },\r\n                        { legend: { display: true, position: 'bottom'} }\r\n                    }/>\r\n                </div>\r\n                <div className=\"graph_box\">\r\n                    <Line data={quaranted} options={\r\n                        { title: { display: true, text: '월별 격리자 현황', fontSize: 25} },\r\n                        { legend: { display: true, position: 'bottom'} }\r\n                    }/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Graph;","import React from 'react';\r\nimport CoronaState from '../coronaApi/CoronaState';\r\nimport Graph from '../coronaApi/Graph';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <div className=\"header_inner\">\r\n          <h1>COVID-19</h1>\r\n          <select className=\"opt_box\">\r\n            <option>국내</option>\r\n            <option>외국</option>\r\n          </select>\r\n          {/* <select>{country && country.map((v,i)=><option key={v+i}>{v.Country}</option>)}</select> */}\r\n        </div>\r\n      </div>\r\n        \r\n      <div className=\"main\">\r\n        <h1>코로나 현황</h1>\r\n        <CoronaState/>\r\n        <Graph/>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n","import React from 'react';\n// import { HashRouter, Route } from 'react-router-dom';\nimport Home from './layout/Home';\n// import Overseas from './coronaApi/Overseas';\nimport './App.css';\n\nconst App = () => {\n    return (\n      // <HashRouter>\n      //   <Route path=\"/\" exact={true} component={Home}/>\n      //   <Route path=\"/overseas\" component={Overseas}/>\n      // </HashRouter>\n      <Home/>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}